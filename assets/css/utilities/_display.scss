/**
 * Display utilities
 */
.u-flex {
  display: -webkit-box !important;  // OLD - iOS 6-, Safari 3.1-6, BB7
  display: -ms-flexbox !important;  // TWEENER - IE 10
  display: flex !important;         // NEW, Spec - Firefox, Chrome, Opera
}
 .u-block {
   display: block !important;
 }

 .u-hidden {
   display: none !important;
 }

 // Completely remove from the flow but leave available to screen readers.

 .u-hiddenVisually {
   border: 0 !important;
   clip: rect(1px, 1px, 1px, 1px) !important;
   height: 1px !important;
   overflow: hidden !important;
   padding: 0 !important;
   position: absolute !important;
   width: 1px !important;
 }

 .u-inline {
   display: inline !important;
 }

 // 1. Fix for Firefox bug: an image styled `max-width:100%` within an
 // inline-block will display at its default size, and not limit its width to
 // 100% of an ancestral container.

 .u-inlineBlock {
   display: inline-block !important;
   max-width: 100%; // 1
 }

 @if $responsive == true {

   @each $breakpoint in $breakpoints {

     $alias: nth($breakpoint, 1);
     $value: nth($breakpoint, 2);

     @media (min-width: $value) {

        .u-#{$alias}-flex {
          display: flex !important;
        }

       .u-#{$alias}-block {
         display: block !important;
       }

       .u-#{$alias}-hidden {
         display: none !important;
       }

       .u-#{$alias}-hiddenVisually {
         border: 0 !important;
         clip: rect(1px, 1px, 1px, 1px) !important;
         height: 1px !important;
         overflow: hidden !important;
         padding: 0 !important;
         position: absolute !important;
         width: 1px !important;
       }

       .u-#{$alias}-inline {
         display: inline !important;
       }

       .u-#{$alias}-inlineBlock {
         display: inline-block !important;
         max-width: 100%;
       }
     }
   }
 }
